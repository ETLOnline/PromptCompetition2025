# Dockerfile.frontend
FROM node:18-alpine AS builder

WORKDIR /app

# Declare build arguments (only available during build)
ARG NEXT_PUBLIC_FIREBASE_API_KEY
ARG NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
ARG NEXT_PUBLIC_FIREBASE_PROJECT_ID
ARG NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
ARG NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
ARG NEXT_PUBLIC_FIREBASE_APP_ID
ARG NEXT_PUBLIC_CHALLENGE_DATABASE
ARG NEXT_PUBLIC_SUBMISSION_DATABASE
ARG NEXT_PUBLIC_USER_DATABASE
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_ADMIN_AUTH
ARG NEXT_PUBLIC_SUPER_AUTH
ARG NEXT_PUBLIC_JUDGE_AUTH
ARG NEXT_PUBLIC_USER_AUTH

# Set environment variables from build arguments (only for build process)
ENV NEXT_PUBLIC_FIREBASE_API_KEY=$NEXT_PUBLIC_FIREBASE_API_KEY
ENV NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
ENV NEXT_PUBLIC_FIREBASE_PROJECT_ID=$NEXT_PUBLIC_FIREBASE_PROJECT_ID
ENV NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=$NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
ENV NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
ENV NEXT_PUBLIC_FIREBASE_APP_ID=$NEXT_PUBLIC_FIREBASE_APP_ID
ENV NEXT_PUBLIC_CHALLENGE_DATABASE=$NEXT_PUBLIC_CHALLENGE_DATABASE
ENV NEXT_PUBLIC_SUBMISSION_DATABASE=$NEXT_PUBLIC_SUBMISSION_DATABASE
ENV NEXT_PUBLIC_USER_DATABASE=$NEXT_PUBLIC_USER_DATABASE
ENV NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_ADMIN_AUTH=$NEXT_PUBLIC_ADMIN_AUTH
ENV NEXT_PUBLIC_SUPER_AUTH=$NEXT_PUBLIC_SUPER_AUTH
ENV NEXT_PUBLIC_JUDGE_AUTH=$NEXT_PUBLIC_JUDGE_AUTH
ENV NEXT_PUBLIC_USER_AUTH=$NEXT_PUBLIC_USER_AUTH

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy frontend code
COPY app/ ./app/
COPY components/ ./components/
COPY lib/ ./lib/
COPY hooks/ ./hooks/
COPY public/ ./public/
COPY styles/ ./styles/
COPY next.config.mjs ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./
COPY tsconfig.json ./
COPY components.json ./

# Build the application with environment variables
RUN npm run build

# Production image - clean slate without environment variables
FROM node:18-alpine AS runner

WORKDIR /app

# Set NODE_ENV to production
ENV NODE_ENV=production

# Copy built application and public files
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./
COPY --from=builder /app/node_modules ./node_modules

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Change ownership of the application files
RUN chown -R nextjs:nodejs /app

# Switch to the non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Start the application
CMD ["npm", "start"]
